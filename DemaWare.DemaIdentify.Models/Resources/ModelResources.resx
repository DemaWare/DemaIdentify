<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ValidationSummaryTitle" xml:space="preserve">
    <value>One or more errors have occurred</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordForgotTitle" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="UserRegister" xml:space="preserve">
    <value>Register as a new user?</value>
  </data>
  <data name="AccountConfirmTitle" xml:space="preserve">
    <value>Confirm email</value>
  </data>
  <data name="AccountConfirmedMessage" xml:space="preserve">
    <value>Thank you for confirming your account.</value>
  </data>
  <data name="AccountConfirmFailure" xml:space="preserve">
    <value>Error confirming your email.</value>
  </data>
  <data name="PasswordForgotMessage" xml:space="preserve">
    <value>No problem, we only need the email address associated with your account. We will send you a link to a page where you can create a new password.</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="PasswordSentMessage" xml:space="preserve">
    <value>Please check your email to reset your password.</value>
  </data>
  <data name="AccountCreateMessage" xml:space="preserve">
    <value>Enter your details below to create an account. You will receive an email with a link to activate your account.</value>
  </data>
  <data name="AccountCreateTitle" xml:space="preserve">
    <value>Create account</value>
  </data>
  <data name="PasswordRepeat" xml:space="preserve">
    <value>Repeat password</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="AccountConfirmMessage" xml:space="preserve">
    <value>Please check your email to confirm your account</value>
  </data>
  <data name="PasswordReset" xml:space="preserve">
    <value>Reset password</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="PasswordChanged" xml:space="preserve">
    <value>Your password has been changed.</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="ApplicationName" xml:space="preserve">
    <value>Name of the application</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="InitialConfiguration" xml:space="preserve">
    <value>Initial configuration</value>
  </data>
  <data name="GeneralSettings" xml:space="preserve">
    <value>General settings</value>
  </data>
  <data name="Colors" xml:space="preserve">
    <value>Colors</value>
  </data>
  <data name="ColorBaseBackground" xml:space="preserve">
    <value>Default background color</value>
  </data>
  <data name="ColorBaseForeground" xml:space="preserve">
    <value>Default foreground color</value>
  </data>
  <data name="Images" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="SmtpConfiguration" xml:space="preserve">
    <value>SMTP configuration</value>
  </data>
  <data name="AdminUser" xml:space="preserve">
    <value>User with administration rights</value>
  </data>
  <data name="UrlLogoWhite" xml:space="preserve">
    <value>Logo URL (white)</value>
  </data>
  <data name="UrlLogoColor" xml:space="preserve">
    <value>Logo URL (color)</value>
  </data>
  <data name="UrlBackgroundCover" xml:space="preserve">
    <value>Background cover URL</value>
  </data>
  <data name="SmtpHost" xml:space="preserve">
    <value>SMTP: Host</value>
  </data>
  <data name="SmtpPort" xml:space="preserve">
    <value>SMTP: Port</value>
  </data>
  <data name="SmtpEnableSsl" xml:space="preserve">
    <value>SMTP: Enable SSL</value>
  </data>
  <data name="SmtpUsername" xml:space="preserve">
    <value>SMTP: Username</value>
  </data>
  <data name="SmtpPassword" xml:space="preserve">
    <value>SMTP: Password</value>
  </data>
  <data name="SmtpFromAddress" xml:space="preserve">
    <value>SMTP: Default sender email</value>
  </data>
  <data name="SmtpFromName" xml:space="preserve">
    <value>SMTP: Default sender name</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ErrorMessageRequired" xml:space="preserve">
    <value>The field '{0}' is required.</value>
  </data>
  <data name="ErrorMessageLogin" xml:space="preserve">
    <value>Your username and password do not match. Please try again.</value>
  </data>
  <data name="ErrorMessageLength" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
  <data name="PasswordNoMatch" xml:space="preserve">
    <value>The passwords do not match.</value>
  </data>
  <data name="SignedInAs" xml:space="preserve">
    <value>Signed in as</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Applications" xml:space="preserve">
    <value>Applications</value>
  </data>
  <data name="Clients" xml:space="preserve">
    <value>Clients</value>
  </data>
  <data name="Authorizations" xml:space="preserve">
    <value>Authorizations</value>
  </data>
  <data name="Scopes" xml:space="preserve">
    <value>Scopes</value>
  </data>
  <data name="Tokens" xml:space="preserve">
    <value>Tokens</value>
  </data>
  <data name="Identity" xml:space="preserve">
    <value>Identity</value>
  </data>
  <data name="Identities" xml:space="preserve">
    <value>Identities</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Templates" xml:space="preserve">
    <value>Templates</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="RoleConfirmDelete" xml:space="preserve">
    <value>Are you sure to delete the role '{0}'?</value>
  </data>
  <data name="EmailAddressConfirmed" xml:space="preserve">
    <value>Email address confirmed</value>
  </data>
  <data name="LockoutEnabled" xml:space="preserve">
    <value>Lockout enabled</value>
  </data>
  <data name="LastLoginTime" xml:space="preserve">
    <value>Last login</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="UserRoleConfirmDelete" xml:space="preserve">
    <value>Are you sure to delete the role '{0}' for user '{1}'?</value>
  </data>
  <data name="Choose" xml:space="preserve">
    <value>Choose...</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Email address</value>
  </data>
  <data name="TemplateConfirmDelete" xml:space="preserve">
    <value>Are you sure to delete the template '{0}'?</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Visible" xml:space="preserve">
    <value>Visible</value>
  </data>
  <data name="ClientId" xml:space="preserve">
    <value>Client ID</value>
  </data>
  <data name="Resources" xml:space="preserve">
    <value>Resources</value>
  </data>
  <data name="Organisations" xml:space="preserve">
    <value>Organisations</value>
  </data>
  <data name="Organisation" xml:space="preserve">
    <value>Organisation</value>
  </data>
  <data name="DomainName" xml:space="preserve">
    <value>Domain name</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="OrganisationConfirmDelete" xml:space="preserve">
    <value>Are you sure to delete the organisation '{0}'?</value>
  </data>
</root>